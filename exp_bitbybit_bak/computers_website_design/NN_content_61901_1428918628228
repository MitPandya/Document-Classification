JavaScript Garden es fi hu ja ko pl ptbr ru tr zh zhtw #top Menu Intro Objects Usage Properties Prototype hasOwnProperty Loop Functions Function Declarations Expressions Works Closures References arguments Constructors Scopes Namespaces Arrays Array Iteration Properties Array Constructor Types Equality Comparisons typeof Operator instanceof Operator Type Core Use eval Automatic Semicolon Insertion Operator setTimeout setInterval prev section section name section section name show menu Intro Intro JavaScript Garden collection documentation parts JavaScript programming language advice mistakes bugs performance issues practices expert JavaScript programmers encounter endeavours depths language JavaScript Garden aim JavaScript Former knowledge language order topics guide order basics language head guide Mozilla Developer Network Authors guide work Overflow users Ivo Wetzel Zhang Yi Jiang Design s Tim Ruffles Contributors list contributors JavaScript Garden GitHub Cramer Development supports mirror JavaScriptGarden info License JavaScript Garden MIT license GitHub errors typos file issue request repository JavaScript room Overflow chat Objects Usage Properties Everything JavaScript acts object exceptions // [ ] // function Foo Foo bar Foo bar // misconception number literals cannot objects flaw JavaScript s parser tries dot notation number point // SyntaxError couple workarounds number literals act objects // point // note space dot // Objects Data Type Objects JavaScript Hashmaps properties mapping values object notation object object inherits prototype properties var foo // object // object test property value var bar test Properties properties object ways dot notation square bracket notation var foo name kitten foo name // kitten foo[ name ] // kitten var name foo[get] // kitten foo // SyntaxError foo[ ] // works notations work difference square bracket notation properties use property names lead syntax error Properties way property object use operator property value property key var obj bar foo baz obj bar obj foo obj baz var obj obj hasOwnProperty console log obj[i] outputs bar foo baz output Notation Keys var test case keyword string keyword // SyntaxError properties characters strings design JavaScript s parser SyntaxError ECMAScript error fact keyword string JavaScript engines Prototype JavaScript feature inheritance model uses prototypal JavaScript s weaknesses prototypal inheritance model fact model example model top prototypal model way task JavaScript language features prototypal inheritance time differences models difference inheritance JavaScript uses prototype chains Bar prototype Foo prototype result objects prototype changes object s prototype prototype cases effect function Foo value Foo prototype method function function Bar // Bar s prototype instance Foo Bar prototype Foo Bar prototype foo World // list Bar constructor Bar prototype constructor Bar var test Bar // bar instance // prototype chain test [instance Bar] Bar prototype [instance Foo] foo World Foo prototype method prototype code object test Bar prototype Foo 